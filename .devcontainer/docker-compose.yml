version: '3'

services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        # [Choice] Python version: 3, 3.8, 3.7, 3.6
        VARIANT: 3.9
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        USER_UID: 1000
        USER_GID: 1000

    depends_on:
      - kafka

    init: true
    privileged: true

    volumes:
      - ..:/workspace:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    user: vscode

    environment:
      TB_S3_ENDPOINT_URL: http://localstack:4566
      TB_S3_ACCESS_KEY_ID: testbed-key
      TB_S3_SECRET_ACCESS_KEY: testbed-secret
      TB_INBOX_BUCKET: inbox
      TB_OBJECT_ID: testbed-event-object
      TB_SUBMITTER_PUBKEY: ZZ7Ss44DXhAwObVkqHaKoF2eyxK5rMHDcQ1R605iCQM=
      TB_SERVICE_INSTANCE_ID: testbed-app-1
      TB_KAFKA_SERVERS: '["kafka:9092"]'
      TB_SERVICE_NAME: testbed_kafka

  ekss:
    image: ghga/encryption-key-store-service:main
    depends_on:
      - vault
    environment:
      EKSS_HOST: 0.0.0.0
      EKSS_PORT: 80
      EKSS_VAULT_HOST: vault
      EKSS_VAULT_PORT: 8200
      EKSS_VAULT_TOKEN: dev-token
      EKSS_SERVER_PRIVATE_KEY: YzRnaC12MQAEbm9uZQAEbm9uZQAgG8oJdJ0zEEGD/ZKqhBdJSLKHM1/MO8XqUNSYpL0xyv0=
      EKSS_SERVER_PUBLIC_KEY: qx5g31H7rdsq7sgkew9ElkLIXvBje4RxDVcAHcJD8XY=
  irs:
    image: ghga/interrogation-room-service:main
    depends_on:
      - kafka
    restart: on-failure

    environment:
      IRS_S3_ENDPOINT_URL: http://localstack:4566
      IRS_S3_ACCESS_KEY_ID: testbed-key
      IRS_S3_SECRET_ACCESS_KEY: testbed-secret
      IRS_SERVICE_INSTANCE_ID: testbed-irs-1
      IRS_KAFKA_SERVERS: '["kafka:9092"]'
      IRS_INBOX_BUCKET: inbox
      IRS_EKS_URL: http://ekss/secrets

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  localstack:
    image: localstack/localstack:latest
    environment:
      SERVICES: s3
      DEFAULT_REGION: eu-west-1
      AWS_DEFAULT_REGION: eu-west-1
      # accessible at localhost
      HOSTNAME_EXTERNAL: localhost
      AWS_ACCESS_KEY_ID: testbed-key
      AWS_SECRET_ACCESS_KEY: testbed-secret
      USE_SSL: "false"
      DATA_DIR: /tmp/localstack/data
      DEBUG: 1
    volumes:
      - type: volume
        source: s3_fs
        target: /tmp/localstack
        volume:
          nocopy: true

  vault:
    image: hashicorp/vault:1.11.4
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_DEV_ROOT_TOKEN_ID: dev-token
    cap_add:
      - IPC_LOCK

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
volumes:
  s3_fs: {}
